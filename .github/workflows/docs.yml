name: Deploy Documentation

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build documentation
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          echo "Starting Docusaurus build..."
          
          echo "Current directory contents:"
          ls -la
          
          echo "Node.js version:"
          node --version
          
          echo "NPM version:"
          npm --version
          
          echo "Package.json before modification:"
          cat package.json | head -10
          
          # Temporarily remove ESM type for docs build
          cp package.json package.json.backup
          node -e "
            const pkg = JSON.parse(require('fs').readFileSync('package.json', 'utf8'));
            delete pkg.type;
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          
          echo "Package.json after ESM removal:"
          cat package.json | head -10
          
          echo "Checking if docusaurus.config.js exists:"
          ls -la docusaurus.config.js || echo "Config file not found!"
          
          echo "Building docs without ESM..."
          npx docusaurus build --no-minify || {
            echo "Docusaurus build failed! Exit code: $?"
            echo "Attempting build with verbose output..."
            npx docusaurus build --no-minify --verbose || echo "Verbose build also failed"
          }
          
          # Restore original package.json
          mv package.json.backup package.json
          
          echo "Build completed. Checking output..."
          ls -la
          if [ -d "build" ]; then
            echo "Build directory found:"
            ls -la build/ | head -20
          else
            echo "Build directory not found! Current directory:"
            pwd
            echo "All files in current directory:"
            find . -maxdepth 2 -type d
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4