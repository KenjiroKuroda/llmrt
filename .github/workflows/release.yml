name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run type check
        run: npm run typecheck

      - name: Run lint
        run: npm run lint

      - name: Build package
        run: npm run build

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        id: version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
          git tag ${{ steps.version.outputs.tag_name }}

      - name: Push changes
        run: |
          git push origin main
          git push origin ${{ steps.version.outputs.tag_name }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          release_name: Release ${{ steps.version.outputs.tag_name }}
          body: |
            ## Changes in ${{ steps.version.outputs.tag_name }}
            
            Automatically generated release for llm-canvas-engine.
            
            ### Package Files
            - `dist/llmrt.min.js` - Minified browser bundle
            - `dist/types/` - TypeScript definitions
            
            ### Installation
            ```bash
            npm install llm-canvas-engine@${{ steps.version.outputs.new_version }}
            ```
            
            ### CDN Usage
            ```html
            <script src="https://unpkg.com/llm-canvas-engine@${{ steps.version.outputs.new_version }}/dist/llmrt.min.js"></script>
            ```
          draft: false
          prerelease: ${{ github.event.inputs.version == 'prerelease' }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/llmrt.min.js
          asset_name: llmrt.min.js
          asset_content_type: application/javascript

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}